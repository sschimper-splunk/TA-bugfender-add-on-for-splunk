{"basic_builder": {"appname": "TA-bugfender-add-on-for-splunk", "friendly_name": "Bugfender Add-on for Splunk", "version": "2.0.0", "author": "Sebastian Schimper", "description": "", "theme": "#30609B", "large_icon": "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", "small_icon": "iVBORw0KGgoAAAANSUhEUgAAACQAAAAkCAYAAADhAJiYAAAAAXNSR0IArs4c6QAAAxJJREFUWEftmIlOIlEQRQtxQVwQcEk0uIAC//81gIioEeK+ICBqYHIqU+QJCE0PcYjxJSa2TXfduksVMSBTdgJThkemG1Aul+v8D8ay2WyXmE8M/QL6K8fPZmhxcVE6nY7MzMzIx8eHvL29jW1D3wwFg0FJpVLSarWk0WhILBaTWq0mlUpFQezs7Mjy8rLc3d0JQPkpFovSbreHgvQNaG1tTZ6enpQRLwfWlpaWFPSw4xvQ4eGhnJycKKBAICBbW1sSiUS6tWDi+vpaQXMAdHBwoM9MDBAyraysyPr6utLP2dvbk3q9Lre3t311AAoIgL28vOh9ZL6/v5fHx8eB7I7FUDqdluPjY30xzGQyGcnn83p9dHSkRj49PdXr7e1tCYfDUiqVVCr8VK1WlSnY4/P2LreTsQDBxtnZWReAvXB+fl4BJhIJBcAxsMiIbDDLMQ/t7+9LuVzuY3UsQBsbG3Jzc6PdEmmLtRdAVEY+Y5BUIl3vGQuQde1KFY1GBUC8HIaen5+1RjweVzmJf7PZ1Pt4inQ+PDx8ktuXZMwRijNnNjc31agwhpm9RH93d1fOz88FHxYKBQUP26+vr59I8sxQKBTShzHlwsKCdg1AuvVyMDnNGCCewewk1BdDJIaJTPRnZ2d1QgMOoPx92HE/x/yykYHRewelZ4bwCRJdXl7qALSBZ50PA+Qyaf5DQsbA+/u7P4bcKCeTyb54DwPkpguT05QbDF+S8RATGhO7rHw1T9wiVhymbEJ/5T/PklGAZFxcXGgt6xpvMXl702KA8BwSE3uXKXfI+maIhJgh8RSmJLr4AWPTPeuDMzc3pykCDNPd0gVAGsDc/7w67CsEc4itTcLY8rZOXAbN+CQSzzF7jFm+I5GuQfNrLMlcatnarAG6BQiFkY3kcGAPr11dXSlzMAOTtjq+CoFvQINMabuOYqurq901wjVrA5C2WiYOiAL4gDlCEcDwu217ZMJHrBjA4Tn8N2rN+GZoUId4CmnwGvL1Dj0vK2aigLwUHPWZX0A/h6FRnXzH/en+/9B3MDCqxh9YRC5DRODzCQAAAABJRU5ErkJggg==", "visible": true, "tab_version": "4.1.3", "tab_build_no": "0", "build_no": 1}, "data_input_builder": {"datainputs": [{"index": "default", "sourcetype": "bugfender:app", "interval": "600", "use_external_validation": true, "streaming_mode_xml": true, "name": "bugfender_apps", "title": "Bugfender Apps", "description": "Retrieves the list of all Apps that current user has access to and indexes them one by one for Splunk.", "type": "customized", "parameters": [{"required": true, "name": "bugfender_account", "label": "Bugfender Account", "default_value": "", "placeholder": "", "help_string": "", "possible_values": [], "type": "global_account", "format_type": "global_account", "value": ""}], "data_inputs_options": [{"type": "customized_var", "name": "bugfender_account", "title": "Bugfender Account", "description": "", "required_on_edit": false, "required_on_create": true, "possible_values": [], "format_type": "global_account", "default_value": "", "placeholder": ""}], "code": "\n# encoding = utf-8\n\nimport os\nimport sys\nimport time\nimport datetime\n\n'''\n    IMPORTANT\n    Edit only the validate_input and collect_events functions.\n    Do not edit any other part in this file.\n    This file is generated only once when creating the modular input.\n'''\n'''\n# For advanced users, if you want to create single instance mod input, uncomment this method.\ndef use_single_instance_mode():\n    return True\n'''\n\ndef validate_input(helper, definition):\n    \"\"\"Implement your own validation logic to validate the input stanza configurations\"\"\"\n    # This example accesses the modular input variable\n    # bugfender_account = definition.parameters.get('bugfender_account', None)\n    pass\n\ndef collect_events(helper, ew):\n    import json\n    import bugfender_import_data as bf\n    sys.path.insert(0, os.path.join(os.path.dirname(__file__), \"..\", \"lib\"))\n    \n    app_list = bf.get_bugfender_app_list(helper)\n\n    for app in app_list:\n        event = helper.new_event(data=json.dumps(app), time=None, source=helper.get_input_type(), index=helper.get_output_index(), sourcetype=helper.get_sourcetype())\n        ew.write_event(event)\n    helper.log_debug(f\"Modular input {helper.get_input_type()} terminated successfully!\")", "customized_options": [{"name": "bugfender_account", "value": "account0"}], "uuid": "cf77389562cf4ecba71e4fa9e3d651be"}, {"index": "default", "sourcetype": "bugfender:app:device", "interval": "3600", "use_external_validation": true, "streaming_mode_xml": true, "name": "bugfender_app_devices", "title": "Bugfender App Devices", "description": "Retrieves Devices associated with given Apps, and indexes them one by one for Splunk.", "type": "customized", "parameters": [{"name": "bugfender_account", "label": "Bugfender Account", "help_string": "", "required": true, "possible_values": [], "format_type": "global_account", "default_value": "", "placeholder": "", "type": "global_account", "value": ""}, {"name": "app_id", "label": "Bugfender App ID", "help_string": "", "required": true, "format_type": "text", "default_value": "", "placeholder": "", "type": "text", "value": ""}], "data_inputs_options": [{"type": "customized_var", "name": "bugfender_account", "title": "Bugfender Account", "description": "", "required_on_edit": false, "required_on_create": true, "possible_values": [], "format_type": "global_account", "default_value": "", "placeholder": ""}, {"type": "customized_var", "name": "app_id", "title": "Bugfender App ID", "description": "", "required_on_edit": false, "required_on_create": true, "format_type": "text", "default_value": "", "placeholder": ""}], "code": "\n# encoding = utf-8\n\nimport os\nimport sys\nimport time\nimport datetime\n\n'''\n    IMPORTANT\n    Edit only the validate_input and collect_events functions.\n    Do not edit any other part in this file.\n    This file is generated only once when creating the modular input.\n'''\n'''\n# For advanced users, if you want to create single instance mod input, uncomment this method.\ndef use_single_instance_mode():\n    return True\n'''\n\ndef validate_input(helper, definition):\n    \"\"\"Implement your own validation logic to validate the input stanza configurations\"\"\"\n    # This example accesses the modular input variable\n    # global_account = definition.parameters.get('global_account', None)\n    # app_id = definition.parameters.get('app_id', None)\n    # start_date = definition.parameters.get('start_date', None)\n    # end_date = definition.parameters.get('end_date', None)\n    pass\n\ndef collect_events(helper, ew):\n    import json\n    import bugfender_import_data as bf\n    sys.path.insert(0, os.path.join(os.path.dirname(__file__), \"..\", \"lib\"))\n    \n    devices = bf.get_bugfender_app_devices(helper)\n\n    duplicate_count = 0\n    for device in devices:\n        device_hash = bf.hash(json.dumps(device))\n        checkpoint_key = f\"{helper.get_input_stanza_names()}_event_{device_hash}\"\n        state = helper.get_check_point(checkpoint_key)\n\n        if (state is None):\n            event = helper.new_event(data=json.dumps(device), time=None, source=helper.get_input_type(), index=helper.get_output_index(), sourcetype=helper.get_sourcetype())\n            ew.write_event(event)\n            helper.save_check_point(checkpoint_key, \"indexed\")\n        else:\n            duplicate_count += 1\n            \n    helper.log_debug(f\"Modular input {helper.get_input_type()} terminated successfully! {duplicate_count} duplicate events were encountered and skipped.\")\n    ", "customized_options": [{"name": "bugfender_account", "value": "account0"}, {"name": "app_id", "value": "30525"}], "uuid": "e29cc6d102304a71a24089746522b937"}, {"index": "default", "sourcetype": "bugfender:app:issue", "interval": "3600", "use_external_validation": true, "streaming_mode_xml": true, "name": "bugfender_app_issues", "title": "Bugfender App Issues", "description": "Retrieves a list of issues associated with apps, and indexes them one by one for Splunk.", "type": "customized", "parameters": [{"name": "bugfender_account", "label": "Bugfender account", "help_string": "", "required": true, "possible_values": [], "format_type": "global_account", "default_value": "", "placeholder": "", "type": "global_account", "value": "account0"}, {"required": true, "name": "app_id", "label": "Bugfender App ID", "default_value": "", "placeholder": "", "help_string": "", "type": "text", "format_type": "text", "value": ""}, {"name": "issue_status", "label": "Issue Status", "help_string": "", "required": true, "possible_values": [{"value": "issue_status_open", "label": "Open"}, {"value": "issue_status_closed", "label": "Closed"}], "format_type": "radiogroup", "default_value": "issue_status_open", "type": "radiogroup", "value": "issue_status_open"}], "data_inputs_options": [{"type": "customized_var", "name": "bugfender_account", "title": "Bugfender account", "description": "", "required_on_edit": false, "required_on_create": true, "possible_values": [], "format_type": "global_account", "default_value": "", "placeholder": ""}, {"type": "customized_var", "name": "app_id", "title": "Bugfender App ID", "description": "", "required_on_edit": false, "required_on_create": true, "format_type": "text", "default_value": "", "placeholder": ""}, {"type": "customized_var", "name": "issue_status", "title": "Issue Status", "description": "", "required_on_edit": false, "required_on_create": true, "possible_values": [{"value": "issue_status_open", "label": "Open"}, {"value": "issue_status_closed", "label": "Closed"}], "format_type": "radiogroup", "default_value": "issue_status_open"}], "code": "\n# encoding = utf-8\n\nimport os\nimport sys\nimport time\nimport datetime\n\n'''\n    IMPORTANT\n    Edit only the validate_input and collect_events functions.\n    Do not edit any other part in this file.\n    This file is generated only once when creating the modular input.\n'''\n'''\n# For advanced users, if you want to create single instance mod input, uncomment this method.\ndef use_single_instance_mode():\n    return True\n'''\n\ndef validate_input(helper, definition):\n    import bugfender_import_data as bf\n    bf.validate_rfc3339(helper.get_arg(\"start_date\"))\n    bf.validate_rfc3339(helper.get_arg(\"end_date\"))\n\ndef collect_events(helper, ew):\n    import json\n    import bugfender_import_data as bf\n    sys.path.insert(0, os.path.join(os.path.dirname(__file__), \"..\", \"lib\"))\n\n    issues_list = bf.get_bugfender_app_issues(helper)\n\n    event_count = 0\n    for issue in issues_list:\n        timestamp_rfc3339 = issue.get(\"created_at\")\n        timestamp_utc_seconds = bf.convert_rfc3339_to_utc_total_seconds(timestamp_rfc3339, helper)\n\n        event = helper.new_event(source=helper.get_input_type(), time=timestamp_utc_seconds, index=helper.get_output_index(), sourcetype=helper.get_sourcetype(), data=json.dumps(issue))\n        ew.write_event(event)\n        event_count += 1\n\n    helper.log_debug(f\"Modular input {helper.get_input_type()} terminated successfully! {event_count} events in total were indexed.\")", "customized_options": [{"name": "bugfender_account", "value": "account0"}, {"name": "app_id", "value": "30525"}, {"name": "issue_status", "value": "issue_status_open"}], "uuid": "4d2f266309444d6c88a691d9303ad1c3"}, {"index": "default", "sourcetype": "bugfender:app:log", "interval": "3600", "use_external_validation": true, "streaming_mode_xml": true, "name": "bugfender_app_logs", "title": "Bugfender App Logs", "description": "Retrieves Bugfender app logs and indexed them one by one for Splunk.", "type": "customized", "parameters": [{"required": true, "name": "bugfender_account", "label": "Bugfender Account", "default_value": "", "placeholder": "", "help_string": "", "possible_values": [], "type": "global_account", "format_type": "global_account", "value": "account0"}, {"required": true, "name": "app_id", "label": "Bugfender App ID", "default_value": "", "placeholder": "", "help_string": "", "type": "text", "format_type": "text", "value": "30525"}], "data_inputs_options": [{"type": "customized_var", "name": "bugfender_account", "title": "Bugfender Account", "description": "", "required_on_edit": false, "required_on_create": true, "possible_values": [], "format_type": "global_account", "default_value": "", "placeholder": ""}, {"type": "customized_var", "name": "app_id", "title": "Bugfender App ID", "description": "", "required_on_edit": false, "required_on_create": true, "format_type": "text", "default_value": "", "placeholder": ""}], "code": "\n# encoding = utf-8\n\nimport os\nimport sys\nimport time\nimport datetime\n\n'''\n    IMPORTANT\n    Edit only the validate_input and collect_events functions.\n    Do not edit any other part in this file.\n    This file is generated only once when creating the modular input.\n'''\n'''\n# For advanced users, if you want to create single instance mod input, uncomment this method.\ndef use_single_instance_mode():\n    return True\n'''\n\ndef validate_input(helper, definition):\n    pass\n\ndef collect_events(helper, ew):\n    import json\n    import bugfender_import_data as bf\n    sys.path.insert(0, os.path.join(os.path.dirname(__file__), \"..\", \"lib\"))\n\n    log_list = bf.get_bugfender_app_logs(helper)\n\n    event_count = 0\n    for item in log_list:\n        timestamp_rfc3339 = item.get(\"timestamp\")\n        timestamp_utc_seconds = bf.convert_rfc3339_to_utc_total_seconds(timestamp_rfc3339, helper)\n        event = helper.new_event(data=json.dumps(item), time=timestamp_utc_seconds, source=helper.get_input_type(), index=helper.get_output_index(), sourcetype=helper.get_sourcetype())\n        ew.write_event(event)\n        event_count += 1\n\n    helper.log_debug(f\"Modular input {helper.get_input_type()} terminated successfully! {event_count} events in total were indexed. Most recent timestamp: {most_recent_event_timestamp}\")\n", "customized_options": [{"name": "bugfender_account", "value": "account0"}, {"name": "app_id", "value": "30525"}], "uuid": "8c2fd7a4a41f4b9ea39d27f9b54f6b90", "sample_count": 0}]}, "global_settings_builder": {"global_settings": {"log_settings": {"log_level": "DEBUG"}, "credential_settings": []}}, "sourcetype_builder": {"bugfender:app": {"metadata": {"event_count": 0, "data_input_name": "bugfender_apps", "extractions_count": 0, "cims_count": 0}}, "bugfender:app:device": {"metadata": {"event_count": 0, "data_input_name": "bugfender_app_devices", "extractions_count": 0, "cims_count": 0}}, "bugfender:app:issue": {"metadata": {"event_count": 0, "data_input_name": "bugfender_app_issues", "extractions_count": 0, "cims_count": 0}}, "bugfender:app:log": {"metadata": {"event_count": 0, "data_input_name": "bugfender_app_logs", "extractions_count": 0, "cims_count": 0}}}, "validation": {}}